'#define WOR word';

'#include <include/BASIC.h>';

"---------------------------------------------------------------------------";
"                                                                           ";
"                        Début du programme                                 ";
"                                                                           ";
"---------------------------------------------------------------------------";

"---------------------------------------------------------------------------";
" AddElt:                                                                   ";
"        Met a jour un element d'un tableau alpha ou une variable alpha     ";
"                                                                           ";
" Entrée:                                                                   ";
"       C: 0-> tableau, 1-> variable simple                                 ";
"      AY: Adresse du nom du fichier (A: poids faible)                      ";
"       X: Indice dans VARTABLE pour le nom du tableau                      ";
"---------------------------------------------------------------------------";
'#iflused AddElt';
'#echo Ajout AddElt';

AddElt:
	STACK .A, .Y;			" Sauvegarde l'adresse de l'entrée";
	STACK .P;			" Sauvegarde P pour plus tard";

	CALL SetVarName;
	UNSTACK .P;			" Restaure P pour savoir ce qu'on cherche";
	CALL FindVarArray;

	"String:";
	.Y = $02;			" Sauvegarde l'adresse de la chaine";
	REPEAT;
	DO;
		.A = @VAR_ADDR[.Y];
		'STA TMP_STR-1,Y';
		DEC .Y;
	END;
	UNTIL .Z;

	.A = @VAR_ADDR[.Y];		" Taille de la chaine";
	IFF .Z THEN Vide;

	.AY <- VAR_ADDR;		" Libère la chaine";
	CALL FreeStr_04;

	Vide:
	.A = 12;			" Longueur de la chaine";
	CALL NewStr;

	.Y = $00;
	'STA (VAR_ADDR),Y';		" Nouvelle longueur dans le desripteur";

	INC .Y;
					" &VAR_ADDR[.Y] = TMP_STR;";
	.A = TMP_STR;			" Nouvelle adresse de la chaine dans le descripteur";
	'STA (VAR_ADDR), Y';

	INC .Y;
					" &VAR_ADDR[.Y] = TMP_STR_H;";
	.A = TMP_STR_H;			" Nouvelle adresse de la chaine dans le descripteur";
	'STA (VAR_ADDR), Y';

	UNSTACK .Y,.X;
	.A = 12;			" Longueur de la chaine";
	CALL CpyStr;			" Copie une chaine, XY:adresse de la chaine, ACC: longueur de la chaine, $A4-A5: Destination";
RETURN;

'#endif';

"---------------------------------------------------------------------------";
" FindVarArray:                                                             ";
"           Recherche l'adresse d'une variable/tableau                      ";
"                                                                           ";
" Entrée:                                                                   ";
"      C: 0->Tableau, 1->Variable simple                                    ";
"      X: Indice du tableau dans ArrayIndex[]                               ";
"                                                                           ";
" Externe:                                                                  ";
"      ArrayIndex[]: Tableau pour la sauvegarde des indices                 ";
"---------------------------------------------------------------------------";
'#iflused FindVarArray';
'#echo Ajout FindVarArray';

FindVarArray:
	IF ^.C THEN
	BEGIN;
		VARFOUND = $00;		" Consultation";
		ARRAY_FLAG = .A;	" Atmos uniquement:on veut l'adresse d'un element et non celle du tableau";

		STACK .A;		" MSB indice du tableau (<255)";

		LINESIZE = $01;		" Tableau à 1 dimension";

		.A = ArrayIndex[.X];	" LSB indice du tableau";
		STACK .A;

		GOTO FindArrayElt;
	END;

	GOTO FindVar;
"RETURN;";

'#endif';

"---------------------------------------------------------------------------";
" SetCH376Var:                                                              ";
"          Met a jour une variable                                          ";
"                                                                           ";
" Entrée:                                                                   ";
"     AY: Valeur entière de la variable                                     ";
"      X: Indice de la variable dans le tableau VARTABLE                    ";
"---------------------------------------------------------------------------";
'#iflused SetCH376Var';
'#echo Ajout SetCH376Var';

SetCH376Var:
	CALL SetVarName;
	GOTO SetVar;
"RETURN";

'#endif';

"---------------------------------------------------------------------------";
" SetVarName:                                                               ";
"     Place le nom de la variable .X dans VARNAME1, VARNAME2                ";
"                                                                           ";
" Entrée:                                                                   ";
"    X: Indice dans VARTABLE                                                ";
"                                                                           ";
" Sortie:                                                                   ";
"    A: Inchangé                                                            ";
"    X: Inchangé                                                            ";
"    Y: Inchangé                                                            ";
"                                                                           ";
" Externe:                                                                  ";
"    VARTABLE[]: Table des noms de variables                                ";
"---------------------------------------------------------------------------";
'#iflused SetVarName';
'#echo Ajout SetVarName';

SetVarName:
	STACK .A, .X;			" Sauvegarde A et X pour plus tard";

	SHIFT LEFT A;
	.X = .A;

	VARNAME1 = VARTABLE[.X];
	INC .X;
	VARNAME2 = VARTABLE[.X];

	UNSTACK .X, .A;		" Restaure X & A";
RETURN;

'#endif';

"---------------------------------------------------------------------------";
" SetVar:                                                                   ";
"       Met a jour une variable flotante                                    ";
"                                                                           ";
" Entrée:                                                                   ";
"       AY: Valeur entière de la variable                                   ";
"       VARNAME1,VARNAME2: Nom de la variable                               ";
"---------------------------------------------------------------------------";
'#iflused SetVar';
'#echo Ajout SetVar';

SetVar:
	CALL GIVAYF;			" Conversion Entier -> FACC1";
	CALL FindVar;			" Recherche la variable (adresse en AY)";
	.X = .A;
	GOTO MOVMF;			" MOVMF nécessite que l'adresse soit en XY";
"RETURN;";

'#endif';

"---------------------------------------------------------------------------";
" PrintAY:                                                                  ";
"       Affiche une chaine à l'écran                                        ";
"                                                                           ";
" Entrée:                                                                   ";
"       AY: Adresse de la chaine                                            ";
"        X: Longueur de la chaine                                           ";
"---------------------------------------------------------------------------";
'#iflused PrintAY';
'#echo Ajout PrintAY';

PrintAY:
	H91 <-.AY;			" AY: Adresse de la chaine";
					"  X: Longueur de la chaine";
	GOTO PrintString_07;
"RETURN;";

'#endif';

"---------------------------------------------------------------------------";
"                           Fin du Module                                   ";
"---------------------------------------------------------------------------";

EXIT;

